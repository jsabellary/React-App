name: Deploy Server to Elastic Beanstalk

on:
  workflow_dispatch: 
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore FlightFinder.Server/FlightFinder.Server.csproj

      - name: Publish .NET app
        run: |
          dotnet publish FlightFinder.Server/FlightFinder.Server.csproj \
            -c Release \
            -r linux-x64 \
            --self-contained false \
            -o publish

      - name: Create deployment package
        run: |
          cd publish
          zip -r ../deployment.zip .
          cd ..

      - name: Configure AWS credentials (OIDC)
        if: ${{ secrets.AWS_ROLE_ARN != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Configure AWS credentials (Access Keys)
        if: ${{ secrets.AWS_ROLE_ARN == '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Generate deployment label
        id: version
        run: echo "label=app-${{ github.sha }}-$(date +%s)" >> $GITHUB_OUTPUT

      - name: Upload to S3
        run: |
          aws s3 cp deployment.zip \
            s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-$(aws sts get-caller-identity --query Account --output text)/${{ secrets.EB_APP }}/${{ steps.version.outputs.label }}.zip

      - name: Create application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP }} \
            --version-label ${{ steps.version.outputs.label }} \
            --source-bundle S3Bucket=elasticbeanstalk-${{ secrets.AWS_REGION }}-$(aws sts get-caller-identity --query Account --output text),S3Key=${{ secrets.EB_APP }}/${{ steps.version.outputs.label }}.zip

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --application-name ${{ secrets.EB_APP }} \
            --environment-name ${{ secrets.EB_ENV }} \
            --version-label ${{ steps.version.outputs.label }}

      - name: Wait for deployment
        run: |
          aws elasticbeanstalk wait environment-updated \
            --application-name ${{ secrets.EB_APP }} \
            --environment-name ${{ secrets.EB_ENV }}
